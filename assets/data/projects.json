[
  {
    "slug": "aws-config-lambda-remediation-lab",
    "title": "Auto-Remediating Security-Group Drift (Config + Lambda)",
    "one_liner": "Detects SG rule drift and self-heals to the approved baseline (80/443).",
    "tags": ["aws", "security", "lambda", "event-driven", "automation"],
    "timeline": "2025",
    "context": "Mini-project",
    "type": "Personal",
    "semester": "Summer 2025",
    "problem": "Unauthorized SG rule changes create exposure risk and audit gaps.",
    "approach": "AWS Config custom rule triggers Lambda; compares actual ingress to baseline; revokes non-compliant rules; logs to CloudWatch.",
    "tech_stack": "AWS Config, Lambda (Python), EventBridge, CloudWatch Logs, IAM (least-privilege)",
    "results": "Lab: <1s detection via Config delivery; ~4s remediation via Lambda; zero manual intervention; full audit logs.",
    "links": { "repo": "https://github.com/aykhanpashayev/aws-config-lambda-remediation-lab", "docs": "#" },
    "status": "completed"
  },
  {
    "slug": "cloudtrail-cloudwatch-monitoring-lab",
    "title": "Monitoring & Alerting with CloudTrail, CloudWatch, SNS & EventBridge",
    "one_liner": "Real-time alerts on sensitive AWS API calls + triage queries with Logs Insights.",
    "tags": ["aws", "cloudtrail", "eventbridge", "sns", "cloudwatch", "detections"],
    "timeline": "2025",
    "context": "Guided lab",
    "type": "Lab",
    "semester": "Spring 2025",
    "problem": "Slow detection of risky actions (e.g., SG changes, failed console logins).",
    "approach": "Org Trail â†’ CloudWatch Logs; EventBridge rules for sensitive API events; SNS notifications; metric filters/alarms; Logs Insights for investigations.",
    "tech_stack": "CloudTrail, EventBridge, SNS, CloudWatch Logs/Alarms, Logs Insights",
    "results": "Lab: alert latency under a minute for critical events; standardized triage via saved queries.",
    "links": { "repo": "https://github.com/aykhanpashayev/cloudtrail-cloudwatch-monitoring-lab", "docs": "#" },
    "status": "completed"
  },
  {
    "slug": "aws-kms-encryption-lab",
    "title": "AWS KMS Encryption Lab",
    "one_liner": "Hands-on KMS with S3, EC2/EBS, and CloudTrail for data-at-rest security.",
    "tags": ["aws", "kms", "s3", "ec2", "cloudtrail", "lab"],
    "timeline": "2025",
    "context": "AWS Academy Lab 5.1",
    "type": "Lab",
    "semester": "Spring 2025",
    "problem": "Prove end-to-end data-at-rest protection and auditability in AWS.",
    "approach": "Created CMK; applied SSE-KMS on S3; encrypted EC2 root via snapshot; monitored key usage with CloudTrail; tested key disable/enable impact.",
    "tech_stack": "AWS KMS, S3, EC2/EBS, CloudTrail",
    "results": "Demonstrated encryption, access control, and audit trails; validated failure modes when key disabled.",
    "links": { "repo": "https://github.com/aykhanpashayev/aws-kms-encryption-lab", "docs": "#" },
    "status": "completed"
  },

  {
    "slug": "linux-admin-security-scripts",
    "title": "Linux Administration & Security Scripts",
    "one_liner": "Bash tools for sudo hardening, service health checks, and change monitoring.",
    "tags": ["bash", "linux", "security", "automation"],
    "timeline": "2024",
    "context": "Personal toolkit",
    "type": "Personal",
    "semester": "Spring 2024",
    "problem": "Manually checking sudoers, service uptime, and network state wastes ops time.",
    "approach": "Scripts for sudoers monitoring (inotify), sudo group auditing, log-based sudo monitoring, service restart checks, and netstat verification.",
    "tech_stack": "Bash, inotify-tools, systemd, net-tools",
    "results": "Automates routine checks; produces timestamped logs for auditing.",
    "links": { "repo": "https://github.com/aykhanpashayev/Linux_Administration_Scripts", "docs": "#" },
    "status": "completed"
  },
  {
    "slug": "simple-python-port-scanner",
    "title": "Simple Python Port Scanner",
    "one_liner": "Threaded TCP port scanner to learn sockets and basic recon safely.",
    "tags": ["python", "networking", "cli", "education"],
    "timeline": "2024",
    "context": "Personal project",
    "type": "Personal",
    "semester": "Spring 2024",
    "problem": "Needed a simple, fast, and safe demo scanner for learning and labs.",
    "approach": "Python sockets + threading; configurable port ranges; timeouts; readable stdout table; basic error handling.",
    "tech_stack": "Python (sockets, threading)",
    "results": "Identifies open ports quickly on lab hosts; good teaching tool for fundamentals.",
    "links": { "repo": "https://github.com/aykhanpashayev/port-scanner", "docs": "#" },
    "status": "completed"
  },
  {
    "slug": "python-keylogger-edu",
    "title": "Python Keylogger (Educational)",
    "one_liner": "Ethical-use demo using pynput to capture keystrokes in a controlled lab.",
    "tags": ["python", "pynput", "education", "ethics"],
    "timeline": "2024",
    "context": "Learning exercise (lab-only, ethical use)",
    "type": "Coursework",
    "semester": "Fall 2024",
    "problem": "Understand how endpoint telemetry tools detect keystroke capture.",
    "approach": "Minimal key-capture loop with start/stop timestamps; logged to file; ran in consented lab only.",
    "tech_stack": "Python, pynput",
    "results": "Improved understanding of detection surfaces and logging (defensive/educational only).",
    "links": { "repo": "https://github.com/aykhanpashayev/keylogger", "docs": "#" },
    "status": "completed"
  }
]
