CREATE DATABASE KIMTAY;
SHOW DATABASES;
USE KIMTAY;
CREATE TABLE SALES_REP
(
REP_ID CHAR (2) PRIMARY KEY,
FIRST_NAME CHAR (20),
LAST_NAME CHAR (20),
ADDRESS CHAR (20),
CITY CHAR (15),
STATE CHAR (2),
POSTAL CHAR (5),
CELL_PHONE CHAR (12),
COMMISSION DECIMAL (7, 2),
RATE DECIMAL (3, 2)
);
INSERT INTO SALES_REP
VALUES ('05', 'Susan', 'Garcia', '42 Mountain Ln', 'Cody', 'WY',
'82414', '307-824-1245', 12743.16, 0.04);
INSERT INTO SALES_REP
VALUES ('10', 'Richard', 'Miller', '87 Pikes Dr', 'Ralston', 'WY',
'82440', '307-406-4321', 20872.11, 0.06); 
INSERT INTO SALES_REP
VALUES ('15', 'Donna', 'Smith', '312 Oak Rd', 'Powell', 'WY',
'82440', '307-982-8401', 14912.92, 0.04); 
INSERT INTO SALES_REP
VALUES ('20', 'Daniel', 'Jackson', '19 Lookout Dr', 'Elk Butte',
'WY', '82433', '307-833-9481', 0.00, 0.04);
CREATE TABLE CUSTOMER
(
CUST_ID CHAR (3) PRIMARY KEY,
FIRST_NAME CHAR (20) NOT NULL,
LAST_NAME CHAR (20) NOT NULL,
ADDRESS CHAR (20),
CITY CHAR (15),
STATE CHAR (2),
POSTAL CHAR (5),
EMAIL CHAR (25),
BALANCE DECIMAL (7, 2),
CREDIT_LIMIT DECIMAL (7, 2),
REP_ID CHAR (2)
);
INSERT INTO CUSTOMER
VALUES ('125', 'Joey', 'Smith', '17 Fourth St',
'Cody', 'WY', '82414', 'jsmith17@example.com',
80.68, 500.00, '05');
INSERT INTO CUSTOMER
VALUES ('182', 'Billy', 'Rufton', '21 Simple Cir',
'Garland', 'WY', '82435', 'billyruff@example.com',
43.13, 750.00, '10');
INSERT INTO CUSTOMER
VALUES ('227', 'Sandra', 'Pincher', '53 Verde Ln',
'Powell', 'WY', '82440', 'spinch2@example.com',
156.38, 500.00, '15');
INSERT INTO CUSTOMER
VALUES ('294', 'Samantha', 'Smith', '14 Rock Ln',
'Ralston', 'WY', '82440', 'ssmith5@example.com',
58.60, 500.00, '10');
INSERT INTO CUSTOMER
VALUES ('314','Tom', 'Rascal', '1 Rascal Farm Rd',
'Cody', 'WY', '82414', 'trascal3@example.com',
17.25, 250.00, '15');
INSERT INTO CUSTOMER
VALUES ('375', 'Melanie', 'Jackson', '42 Blackwater
Way', 'Elk Butte', 'WY', '82433',
'mjackson5@example.com', 252.25, 250.00, '05');
INSERT INTO CUSTOMER
VALUES ('435', 'James', 'Gonzalez', '16 Rockway Rd',
'Wapiti', 'WY', '82450', 'jgonzo@example.com',
230.40, 1000.00, '15');
INSERT INTO CUSTOMER
VALUES ('492', 'Elmer', 'Jackson', '22 Jackson Farm
Rd', 'Garland', 'WY', '82435',
'ejackson4@example.com', 45.20, 500.00, '10');
INSERT INTO CUSTOMER
VALUES ('543', 'Angie', 'Hendricks', '27 Locklear
Ln', 'Powell', 'WY', '82440',
'ahendricks7@example.com', 315.00, 750.00,'05');
INSERT INTO CUSTOMER
VALUES ('616', 'Sally', 'Cruz', '199 18th Ave',
'Ralston', 'WY', '82440', 'scruz5@example.com',
8.33, 500.00, '15');
INSERT INTO CUSTOMER
VALUES ('721', 'Leslie', 'Smith', '123 Sheepland
Rd', 'Elk Butte', 'WY', '82433',
'lsmith12@example.com', 166.65, 1000.00,'10');
INSERT INTO CUSTOMER
VALUES ('795', 'Randy', 'Blacksmith', '75 Stream
Rd', 'Cody', 'WY', '82414',
'rblacksmith6@example.com', 61.50, 500.00, '05');
CREATE TABLE INVOICES
(
INVOICE_NUM CHAR(5) PRIMARY KEY,
INVOICE_DATE DATE,
CUST_ID CHAR(3) 
);
INSERT INTO INVOICES
VALUES ('14216','2021-11-15', '125');
INSERT INTO INVOICES
VALUES ('14219','2021-11-15', '227');
INSERT INTO INVOICES
VALUES ('14222','2021-11-16', '294');
INSERT INTO INVOICES
VALUES ('14224','2021-11-16', '182');
INSERT INTO INVOICES
VALUES ('14228','2021-11-18', '435');
INSERT INTO INVOICES
VALUES ('14231','2021-11-18', '125');
INSERT INTO INVOICES
VALUES ('14233','2021-11-18', '435');
INSERT INTO INVOICES
VALUES ('14237','2021-11-19', '616');
CREATE TABLE ITEM
(
ITEM_ID CHAR (4) PRIMARY KEY,
DESCRIPTION CHAR (30),
ON_HAND DECIMAL (4, 0),
CATEGORY CHAR (3),
LOCATION CHAR (1),
PRICE DECIMAL (6, 2)
);
INSERT INTO ITEM
VALUES ('AD72', 'Dog Feeding Station',
12, 'DOG', 'B', 79.99);
INSERT INTO ITEM
VALUES ('BC33', 'Feathers Bird Cage (12x24x18)',
10, 'BRD', 'B', 79.99);
INSERT INTO ITEM
VALUES ('CA75', 'Enclosed Cat Litter Station',
15, 'CAT', 'C', 39.99);
INSERT INTO ITEM
VALUES ('DT12', 'Dog Toy Gift Set', 27,
'DOG', 'B', 39.99);
INSERT INTO ITEM
VALUES ('FM23', 'Fly Mask with Ears', 41,
'HOR', 'C', 24.95);
INSERT INTO ITEM
VALUES ('FS39', 'Folding Saddle Stand', 12,
'HOR', 'C', 39.99);
INSERT INTO ITEM
VALUES ('FS42', 'Aquarium (55 Gallon)',
5, 'FSH', 'A', 124.99);
INSERT INTO ITEM
VALUES ('KH81', 'Wild Bird Food (25 lb)',
24, 'BRD', 'C',19.99);
INSERT INTO ITEM
VALUES ('LD14', 'Locking Small Dog Door', 14,
'DOG', 'A', 49.99);
INSERT INTO ITEM
VALUES ('LP73', 'Large Pet Carrier', 23,
'DOG', 'B', 59.99);
INSERT INTO ITEM
VALUES ('PF19', 'Pump & Filter Kit', 5,
'FSH', 'A', 74.99);
INSERT INTO ITEM
VALUES ('QB92', 'Quilted Stable Blanket',
32, 'HOR', 'C', 119.99);
INSERT INTO ITEM
VALUES ('SP91', 'Small Pet Carrier',
18, 'CAT', 'B', 39.99);
INSERT INTO ITEM
VALUES ('UF39', 'Underground Fence System',
7, 'DOG', 'A', 199.99);
INSERT INTO ITEM
VALUES ('WB49', 'Insulated Water Bucket',
34, 'HOR', 'C', 79.99);
CREATE TABLE INVOICE_LINE
(
INVOICE_NUM CHAR(5),
ITEM_ID CHAR(4),
QUANTITY DECIMAL(3,0),
QUOTED_PRICE DECIMAL(6,2),
PRIMARY KEY (INVOICE_NUM, ITEM_ID)
);
INSERT INTO INVOICE_LINE
VALUES ('14216','CA75', 3, 37.99);
INSERT INTO INVOICE_LINE
VALUES ('14219','AD72', 2, 79.99);
INSERT INTO INVOICE_LINE
VALUES ('14219','DT12', 4, 39.99);
INSERT INTO INVOICE_LINE
VALUES ('14222','LD14', 1, 47.99);
INSERT INTO INVOICE_LINE
VALUES ('14224','KH81', 4, 18.99);
INSERT INTO INVOICE_LINE
VALUES ('14228','FS42', 1, 124.99);
INSERT INTO INVOICE_LINE
VALUES ('14228','PF19', 1, 74.99);
INSERT INTO INVOICE_LINE
VALUES ('14231','UF39', 2, 189.99);
INSERT INTO INVOICE_LINE
VALUES ('14233','KH81', 1, 19.99);
INSERT INTO INVOICE_LINE
VALUES ('14233','QB92', 4, 109.95);
INSERT INTO INVOICE_LINE
VALUES ('14233','WB49', 4, 74.95);
INSERT INTO INVOICE_LINE
VALUES ('14237','LP73', 3, 54.95);
DESCRIBE SALES_REP;
SELECT CUST_ID, FIRST_NAME, LAST_NAME, BALANCE
FROM CUSTOMER;
SELECT LAST_NAME
FROM CUSTOMER
WHERE CUST_ID = '125';
SELECT FIRST_NAME, LAST_NAME, BALANCE, CREDIT_LIMIT
FROM CUSTOMER
WHERE BALANCE > CREDIT_LIMIT;
SELECT DESCRIPTION
FROM ITEM
WHERE LOCATION = 'B'AND
ON_HAND > 15;
SELECT DESCRIPTION
FROM ITEM
WHERE (LOCATION = 'B') OR (ON_HAND > 15);
SELECT DESCRIPTION
FROM ITEM
WHERE NOT (LOCATION = 'B');
SELECT CUST_ID, FIRST_NAME, LAST_NAME, BALANCE
FROM CUSTOMER
WHERE (BALANCE >= 125) AND (BALANCE <= 250);
SELECT CUST_ID, FIRST_NAME, LAST_NAME, BALANCE
FROM CUSTOMER
WHERE (BALANCE BETWEEN 125 AND 250);
SELECT CUST_ID, FIRST_NAME, LAST_NAME, CREDIT_LIMIT - BALANCE
FROM CUSTOMER;
SELECT CUST_ID, FIRST_NAME, LAST_NAME, CREDIT_LIMIT - BALANCE AS
AVAILABLE_CREDIT
FROM CUSTOMER;
SELECT CUST_ID, FIRST_NAME, LAST_NAME, CREDIT_LIMIT - BALANCE AS
AVAILABLE_CREDIT
FROM CUSTOMER
WHERE (CREDIT_LIMIT - BALANCE) >= 400;
SELECT CUST_ID, FIRST_NAME, LAST_NAME, ADDRESS, CITY, STATE, POSTAL
FROM CUSTOMER
WHERE (ADDRESS LIKE '%Rock%');
SELECT CUST_ID, FIRST_NAME, LAST_NAME, CREDIT_LIMIT
FROM CUSTOMER
WHERE (CREDIT_LIMIT IN (500, 750, 1000));
SELECT CUST_ID, FIRST_NAME, LAST_NAME, BALANCE
FROM CUSTOMER
ORDER BY BALANCE;
SELECT COUNT(*)
FROM ITEM
WHERE (CATEGORY = 'DOG');
SELECT COUNT(*), SUM(BALANCE)
FROM CUSTOMER;
SELECT CUST_ID, CUSTOMER.FIRST_NAME, CUSTOMER.LAST_NAME, SALES_REP.REP_ID, SALES_REP.FIRST_NAME, SALES_REP.LAST_NAME
FROM CUSTOMER, SALES_REP
WHERE (CUSTOMER.REP_ID = SALES_REP.REP_ID);
SELECT CUST_ID, CUSTOMER.FIRST_NAME, CUSTOMER.LAST_NAME, SALES_REP.REP_ID, SALES_REP.FIRST_NAME, SALES_REP.LAST_NAME
FROM CUSTOMER, SALES_REP
WHERE (CUSTOMER.REP_ID = SALES_REP.REP_ID) AND (CREDIT_LIMIT
 = 500);
 SELECT DESCRIPTION
FROM INVOICE_LINE, ITEM
WHERE (INVOICE_LINE.ITEM_ID = ITEM.ITEM_ID)AND(INVOICE_NUM = '14233');
SELECT DESCRIPTION
FROM ITEM
WHERE ITEM_ID IN(SELECT ITEM_ID
FROM INVOICE_LINE
WHERE(INVOICE_NUM ='14233')
);SELECT INVOICE_NUM, INVOICE_DATE
FROM INVOICES
WHERE INVOICE_NUM IN (SELECT INVOICE_NUM
FROM INVOICE_LINE
WHERE (ITEM_ID ='KH81')
);
SELECT INVOICE_NUM, INVOICE_DATE
FROM INVOICES
WHERE EXISTS (SELECT*
FROM INVOICE_LINE
WHERE (INVOICES.INVOICE_NUM = INVOICE_LINE.INVOICE_NUM)AND(ITEM_ID 
 = 'KH81')
);
SELECT INVOICE_NUM, INVOICE_DATE
FROM INVOICES
WHERE EXISTS (SELECT*
FROM INVOICE_LINE
WHERE (INVOICES.INVOICE_NUM = INVOICE_LINE.INVOICE_NUM)AND(ITEM_ID 
 = 'KH81')
);
SELECT INVOICE_NUM, INVOICE_DATE
FROM INVOICES
WHERE INVOICE_NUM IN(SELECT INVOICE_NUM
FROM INVOICE_LINE
WHERE ITEM_ID IN (SELECT ITEM_ID
FROM ITEM
WHERE (LOCATION ='C')
)
);
SELECT DISTINCT INVOICES.INVOICE_NUM, INVOICE_DATE
FROM INVOICE_LINE, INVOICES, ITEM
WHERE (INVOICE_LINE.INVOICE_NUM = INVOICES.INVOICE_NUM) AND
 (INVOICE_LINE.ITEM_ID = ITEM.ITEM_ID) AND (LOCATION 
 = 'C') ;
 SELECT CUST_ID, INVOICES.INVOICE_NUM, INVOICE_DATE, SUM(QUANTITY *
 QUOTED_PRICE) AS INVOICE_TOTAL
FROM INVOICES, INVOICE_LINE
WHERE (INVOICES.INVOICE_NUM = INVOICE_LINE.INVOICE_NUM)
GROUP BY INVOICES.INVOICE_NUM, CUST_ID, INVOICE_DATE
HAVING SUM(QUANTITY * QUOTED_PRICE) > 250
ORDER BY INVOICES.INVOICE_NUM;
SELECT R.REP_ID, R.FIRST_NAME, R.LAST_NAME, C.CUST_ID, C.FIRST_NAME,
 C.LAST_NAME
FROM SALES_REP R, CUSTOMER C
WHERE (R.REP_ID = C.REP_ID);
SELECT F.CUST_ID, F.FIRST_NAME, F.LAST_NAME, S.CUST_ID, S.FIRST_NAME,
 S.LAST_NAME, F.CITY
FROM CUSTOMER F, CUSTOMER S
WHERE (F.CITY = S.CITY) AND (F.CUST_ID < S.CUST_ID)
ORDER BY F.CUST_ID, S.CUST_ID;
SELECT EMP_ID, FIRST_NAME, LAST_NAME, MGR_EMP_ID
FROM EMPLOYEE;
SELECT E.EMP_ID, E.FIRST_NAME, E.LAST_NAME, M.EMP_ID AS MGR_ID,
 M.FIRST_NAME AS MGR_FIRST, M.LAST_NAME AS MGR_LAST
FROM EMPLOYEE E, EMPLOYEE M
WHERE (E.MGR_EMP_ID = M.EMP_ID)
ORDER BY E.EMP_ID;
SELECT ITEM_ID, QUANTITY, INVOICE_LINE.INVOICE_NUM, INVOICE_DATE,
 CUSTOMER.CUST_ID,CUSTOMER.FIRST_NAME, CUSTOMER.LAST_NAME,
 SALES_REP.LAST_NAME AS SALES_REP_LAST
FROM INVOICE_LINE, INVOICES, CUSTOMER, SALES_REP
WHERE (INVOICES.INVOICE_NUM = INVOICE_LINE.INVOICE_NUM) AND
(CUSTOMER.CUST_ID = INVOICES.CUST_ID) AND
(SALES_REP.REP_ID = CUSTOMER.REP_ID)
ORDER BY ITEM_ID, INVOICE_LINE.INVOICE_NUM;
SELECT ITEM_ID, QUANTITY, INVOICE_LINE.INVOICE_NUM, INVOICE_DATE,
 CUSTOMER.CUST_ID, CUSTOMER.FIRST_NAME, CUSTOMER.LAST_NAME,
 SALES_REP.LAST_NAME AS SALES_REP_LAST
FROM INVOICE_LINE, INVOICES, CUSTOMER, SALES_REP
WHERE (INVOICES.INVOICE_NUM = INVOICE_LINE.INVOICE_NUM) AND
(CUSTOMER.CUST_ID = INVOICES.CUST_ID) AND
(SALES_REP.REP_ID = CUSTOMER.REP_ID) AND
(CREDIT_LIMIT = 500)
ORDER BY ITEM_ID, INVOICE_LINE.INVOICE_NUM;
SELECT CUST_ID, FIRST_NAME, LAST_NAME
FROM CUSTOMER
WHERE (REP_ID = '10')
union
SELECT CUSTOMER.CUST_ID, CUSTOMER.FIRST_NAME, CUSTOMER.LAST_NAME
FROM CUSTOMER, INVOICES
WHERE (CUSTOMER.CUST_ID = INVOICES.CUST_ID);
SELECT CUST_ID, FIRST_NAME, LAST_NAME
FROM CUSTOMER
WHERE (REP_ID = '10') AND(CUST_ID IN (SELECT CUST_ID
FROM INVOICES));
SELECT CUST_ID, FIRST_NAME, LAST_NAME
FROM CUSTOMER
WHERE (BALANCE > ALL (SELECT BALANCE
FROM CUSTOMER
WHERE REP_ID = '10'));
SELECT CUST_ID, FIRST_NAME, LAST_NAME, BALANCE, REP_ID
FROM CUSTOMER
WHERE (BALANCE > (SELECT MAX(BALANCE)
FROM CUSTOMER
WHERE REP_ID = '10'));
SELECT CUSTOMER.CUST_ID, FIRST_NAME, LAST_NAME, INVOICE_NUM,
INVOICE_DATE
FROM CUSTOMER
INNER JOIN INVOICES
ON (CUSTOMER.CUST_ID = INVOICES.CUST_ID)
ORDER BY CUSTOMER.CUST_ID;
SELECT CUSTOMER.CUST_ID, FIRST_NAME, LAST_NAME, INVOICE_NUM,
INVOICE_DATE
FROM CUSTOMER
LEFT JOIN INVOICES
ON (CUSTOMER.CUST_ID = INVOICES.CUST_ID)
ORDER BY CUSTOMER.CUST_ID;
SELECT CUSTOMER.CUST_ID, FIRST_NAME, LAST_NAME, INVOICE_NUM,
INVOICE_ DATE
FROM CUSTOMER, INVOICES;
CREATE TABLE LEVEL1_CUSTOMER
(
CUST_ID CHAR(3) PRIMARY KEY,
FIRST_NAME CHAR(20),
LAST_NAME CHAR(20),
BALANCE DECIMAL(7,2),
CREDIT_LIMIT DECIMAL(7,2),
REP_ID CHAR(2)
);
INSERT INTO LEVEL1_CUSTOMER
(SELECT CUST_ID, FIRST_NAME, LAST_NAME, BALANCE, CREDIT_LIMIT,
REP_ID
FROM CUSTOMER
WHERE (CREDIT_LIMIT = 500)
);
UPDATE LEVEL1_CUSTOMER
SET LAST_NAME = 'Martinez'
WHERE (CUST_ID = '616');
SELECT *
FROM LEVEL1_CUSTOMER;
UPDATE LEVEL1_CUSTOMER
SET CREDIT_LIMIT = 550
WHERE (REP_ID = '15') AND (BALANCE > 150);
SELECT *
FROM LEVEL1_CUSTOMER;
INSERT INTO LEVEL1_CUSTOMER
VALUES ('837', 'Debbie', 'Thomas', 0, 500, '15'); 
SELECT *
FROM LEVEL1_CUSTOMER;
UPDATE LEVEL1_CUSTOMER
SET LAST_NAME = 'Jones'
WHERE (CUST_ID = '294');
DELETE FROM LEVEL1_CUSTOMER
WHERE (CUST_ID = '795');
SELECT *
FROM LEVEL1_CUSTOMER;
UPDATE LEVEL1_CUSTOMER
SET BALANCE = NULL
WHERE (CUST_ID = '616');
SELECT *
FROM LEVEL1_CUSTOMER;
UPDATE LEVEL1_CUSTOMER
SET CUST_TYPE = 'R';
DESCRIBE LEVEL1_CUSTOMER;
UPDATE LEVEL1_CUSTOMER
SET CUST_TYPE = ‘D’
WHERE (CUST_ID = ‘492’);
SELECT *
FROM LEVEL1_CUSTOMER;
DESCRIBE LEVEL1_CUSTOMER;
ALTER TABLE LEVEL1_CUSTOMER
MODIFY LAST_NAME CHAR (30);
ALTER TABLE LEVEL1_CUSTOMER
MODIFY CREDIT_LIMIT DECIMAL(7, 2) NOT NULL;
DESCRIBE LEVEL1_CUSTOMER;
DROP TABLE LEVEL1_CUSTOMER;
CREATE VIEW DOGS AS
(SELECT ITEM_ID, DESCRIPTION, ON_HAND, PRICE
FROM ITEM
WHERE (CATEGORY = 'DOG')
);
SELECT *
FROM DOGS
WHERE (PRICE > 50);
CREATE VIEW DGS (ID, DSC, OH, PRCE) AS
(SELECT ITEM_ID, DESCRIPTION, ON_HAND, PRICE
FROM ITEM
WHERE (CATEGORY = 'DOG')
);
SELECT *
FROM DGS;
CREATE VIEW REP_CUST (RID, RFIRST, RLAST, CID, CFIRST, CLAST) AS
(SELECT SALES_REP.REP_ID, SALES_REP.FIRST_NAME,
SALES_REP.LAST_NAME, CUST_ID, CUSTOMER.FIRST_NAME,
CUSTOMER.LAST_NAME 
FROM SALES_REP, CUSTOMER
WHERE (SALES_REP.REP_ID = CUSTOMER.REP_ID)
ORDER BY SALES_REP.REP_ID, CUST_ID
);
SELECT *
FROM REP_CUST;
CREATE VIEW CRED_CUST (CREDIT_LIMIT, NUM_CUSTOMERS) AS
(SELECT CREDIT_LIMIT, COUNT(*)
FROM CUSTOMER
GROUP BY CREDIT_LIMIT
ORDER BY CREDIT_LIMIT
);
SELECT *
FROM CRED_CUST;
CREATE VIEW REP_CRED AS 
(SELECT DISTINCT CREDIT_LIMIT, REP_ID
FROM CUSTOMER
ORDER BY CREDIT_LIMIT, REP_ID
);
SELECT *
FROM REP_CRED;
DROP VIEW DGS;
CREATE INDEX BALIND ON CUSTOMER (BALANCE);
CREATE INDEX REP_NAME ON SALES_REP(LAST_NAME, FIRST_NAME);
CREATE INDEX CRED_LASTNAME ON CUSTOMER(CREDIT_LIMIT DESC, LAST_NAME);
SELECT *
 FROM INFORMATION_SCHEMA.TABLES
 WHERE (TABLE_SCHEMA = 'KIMTAY');
 SELECT *
 FROM INFORMATION_SCHEMA.TABLES
 WHERE (TABLE_SCHEMA = 'KIMTAY') AND (TABLE_TYPE = 
'VIEW');
SELECT *
 FROM INFORMATION_SCHEMA.VIEWS
 WHERE (TABLE_SCHEMA = 'KIMTAY');
 SELECT *
 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE (TABLE_SCHEMA = 'KIMTAY');
 SELECT *
 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE (TABLE_SCHEMA = 'KIMTAY') AND (COLUMN_NAME = 
'CUST_ID');
ALTER TABLE INVOICES
ADD FOREIGN KEY (CUST_ID) REFERENCES CUSTOMER (CUST_ID);
SELECT REP_ID, upper(last_name)
FROM SALES_REP;
SELECT ITEM_ID, ROUND(PRICE, 0) AS ROUNDED_PRICE
FROM ITEM;
SELECT date_add(invoice_date, interval 1 month) AS NEXT_MONTH
FROM INVOICES;
SELECT INVOICE_NUM, INVOICE_DATE + 7 AS NEXT_WEEK
FROM INVOICES;
SELECT INVOICE_NUM, curdate() AS TODAYS_DATE, INVOICE_DATE,
DATEDIFF (INVOICE_DATE, curdate()) AS DAYS
FROM INVOICES;
SELECT CUST_ID, CONCAT (FIRST_NAME,'', LAST_NAME) AS FULL_NAME
FROM CUSTOMER;
SELECT CUST_ID, CONCAT (RTRIM(FIRST_NAME), '', RTRIM (LAST_NAME)) AS
FULL_NAME
FROM CUSTOMER;
DELIMITER // 
CREATE PROCEDURE GET_CUSTOMER_NAME (IN I_CUST_ID CHAR(3))
BEGIN
DECLARE V_FULL_NAME VARCHAR(41);
SELECT CONCAT (FIRST_NAME, '' , LAST_NAME)
INTO V_FULL_NAME
FROM CUSTOMER
WHERE CUST_ID = I_CUST_ID;
SELECT V_FULL_NAME;
END //
DELIMITER ;
DELIMITER // 
DELIMITER //
CREATE PROCEDURE CHG_CUSTOMER_LAST (IN I_CUST_ID CHAR (3),
IN I_NEW_NAME VARCHAR (20))
BEGIN
DECLARE EXIT HANDLER FOR NOT FOUND 
SELECT CONCAT ('No customer with this ID was found: ', I_CUST_ID)
AS MESSAGE;
UPDATE CUSTOMER 
SET LAST_NAME = I_NEW_NAME
WHERE CUST_ID = I_CUST_ID;
END //
DELIMITER ; 
DELIMITER //
CREATE PROCEDURE DEL_INVOICE (IN I_INVOICE_NUM CHAR (5))
BEGIN
DELETE FROM INVOICE_LINES
WHERE INVOICE_NUM = I_INVOICE_NUM;
DELETE FROM INVOICES
WHERE INVOICE_NUM = I_INVOICE_NUM;
END // 
DELIMITER ;
DELIMITER //
CREATE PROCEDURE DISP_REP_CUST (IN I_REP_ID CHAR (2))
BEGIN
DECLARE DONE INT DEFAULT FALSE;
DECLARE I_CUST_ID CHAR (3);
DECLARE I_CUST_NAME CHAR(41);
DECLARE CUSTGROUP cursor for
SELECT CUST_ID, CONCAT (FIRST_NAME, ' ', LAST_NAME) AS CUST_NAME
FROM CUSTOMER
WHERE REP_ID = I_REP_ID;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
OPEN CUSTGROUP;
READ_LOOP: LOOP
FETCH CUSTGROUP INTO I_CUST_ID, I_CUST_NAME;
IF DONE THEN
LEAVE READ_LOOP;
END IF;
SELECT I_CUST_ID, I_CUST_NAME;
END LOOP;
CLOSE CUSTGROUP;
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE DISP_ITEM_INVOICES( IN I_ITEM_ID CHAR (4))
BEGIN
DECLARE DONE INT DEFAULT FALSE;
DECLARE V_INVOICE_NUM CHAR (5);
DECLARE V_INVOICE_DATE DATE;
DECLARE V_CUST_ID CHAR (3);
DECLARE V_REP_ID CHAR (2);
DECLARE V_REP_LAST CHAR (20);
DECLARE V_REP_FIRST CHAR (20);
DECLARE CUSTGROUP CURSOR FOR
SELECT INVOICES.INVOICE_NUM, INVOICES.INVOICE_DATE,
INVOICES.CUST_ID, CUSTOMER.REP_ID,
SALES_REP.FIRST_NAME, SALES_REP.LAST_NAME
FROM INVOICES, INVOICE_LINE, CUSTOMER, SALES_REP
WHERE INVOICES.INVOICE_NUM = INVOICE_LINE.INVOICE_NUM
AND INVOICES.CUST_ID = CUSTOMER.CUST_ID
AND CUSTOMER.REP_ID = SALES_REP.REP_ID
AND INVOICE_LINE.ITEM_ID = I_ITEM_ID;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
OPEN CUSTGROUP;
READ_LOOP: LOOP
FETCH CUSTGROUP INTO V_INVOICE_NUM, V_INVOICE_DATE, V_CUST_ID,
V_REP_ID, V_REP_LAST, V_REP_FIRST;
IF DONE THEN
LEAVE READ_LOOP;
END IF;
SELECT V_INVOICE_NUM, V_INVOICE_DATE, V_CUST_ID, V_REP_ID,
V_REP_LAST, V_REP_FIRST;
END LOOP;
CLOSE CUSTGROUP;
END // 